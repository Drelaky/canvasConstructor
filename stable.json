{"meta":{"generator":"0.0.1","format":19,"date":1528844505761},"custom":{"Getting Started":{"name":"Getting Started","files":{"GettingStarted":{"name":"Getting Started","type":"md","content":"## Getting Started\n\n## Installation\n\nPlease check [node-canvas readme](https://github.com/Automattic/node-canvas/blob/master/Readme.md#installation) for the installation. You **must** have Canvas installed and working before using this package.\n\n---\n\nHow to use it:\n\n```js\nconst { Canvas } = require('canvas-constructor');\n\nnew Canvas(300, 300)\n    .setColor('#AEFD54')\n    .addRect(5, 5, 290, 290)\n    .setColor('#FFAE23')\n    .setTextFont('28px Impact')\n    .addText('Hello World!', 130, 150)\n    .toBuffer();\n```\n\n- That will create a canvas with size of 300 pixels width, 300 pixels height.\n- Set the colour to #AEFD54\n- Draw a rectangle with the previous colour, covering all the pixels from (5, 5) to (290 + 5, 290 + 5)\n- Set the colour to #FFAE23\n- Set the font size to 28 pixels with font Impact.\n- Write the text 'Hello World!' in the position (130, 150)\n- Return a buffer.\n\nNow, let's suppose we want to add images. I'd recommend [fs-nextra](https://github.com/bdistin/fs-nextra), by BDISTIN, it requires Node.js 8.5.0 to work (it promisifies the async fs methods with `Util.promisify()`), it's a dependency-free and lightweight package that provides support for **atomic operations**.\n\n```js\nconst { Canvas } = require('canvas-constructor');\nconst fsn = require('fs-nextra');\n\nasync function createCanvas() {\n    const image = await fsn.readFile('./images/kitten.png');\n\n    return new Canvas(300, 400)\n        .addImage(image, 0, 0, 300, 400)\n        .setColor('#FFAE23')\n        .setTextFont('28px Impact')\n        .setTextAlign('center')\n        .addText('Kitten!', 150, 370)\n        .toBufferAsync();\n}\n```\n\n- That will create a canvas with size of 300 pixels width, 400 pixels height.\n- Draw an image, given a Buffer (the image from the images folder).\n- Set the colour to #FFAE23\n- Set the font size to 28 pixels with font Impact.\n- Set the text alignment to center.\n- Write the text 'Kitten!' in the position (150, 370)\n- Return a buffer.\n\nAnd now, you have created an image with a kitten in the background and some centered text in the bottom of it.\n\nIf you experience issues with **Canvas** or want to install it, please refer to the [canvas](https://www.npmjs.com/package/canvas) repository, if you feel you found an issue in this package, feel free to file an issue [here](https://github.com/kyranet/canvasConstructor/issues), or make a [Pull Request](https://help.github.com/articles/about-pull-requests/) if you have the fix.\n","path":"guides/Getting Started/GettingStarted.md"}}}},"classes":[{"name":"CanvasConstructor","construct":{"name":"CanvasConstructor","description":"Initialize canvas-constructor","params":[{"name":"width","description":"The canvas' width in pixels.","type":[[["number"]]]},{"name":"height","description":"The canvas' height in pixels.","type":[[["number"]]]},{"name":"type","description":"The canvas type.","optional":true,"type":[[["pdf","'"]],[["svg","'"]]]}]},"props":[{"name":"canvas","description":"The constructed Canvas","access":"private","type":[[["Canvas"]]],"meta":{"line":27,"file":"canvas.js","path":"src"},"since":"0.0.1"},{"name":"context","description":"The 2D context for this canvas","access":"private","type":[[["CanvasRenderingContext2D"]]],"meta":{"line":39,"file":"canvas.js","path":"src"},"since":"0.0.1"},{"name":"width","description":"The image width of this canvas","type":[[["number"]]],"meta":{"line":46,"file":"canvas.js","path":"src"},"since":"0.0.1"},{"name":"height","description":"The image height of this canvas","type":[[["number"]]],"meta":{"line":53,"file":"canvas.js","path":"src"},"since":"0.0.1"},{"name":"lineDash","see":["https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/getLineDash"],"readonly":true,"type":[[["Array","<"],["number",">"]]],"meta":{"line":1164,"file":"canvas.js","path":"src"}}],"methods":[{"name":"changeCanvasSize","description":"Change the current canvas' size.","params":[{"name":"width","description":"The new width for the canvas.","type":[[["number"]]]},{"name":"height","description":"The new heigth for the canvas.","type":[[["number"]]]}],"returns":[[["CanvasConstructor"]]],"meta":{"line":63,"file":"canvas.js","path":"src"}},{"name":"changeCanvasWidth","description":"Change the current canvas' width.","params":[{"name":"width","description":"The new width for the canvas.","type":[[["number"]]]}],"returns":[[["CanvasConstructor"]]],"meta":{"line":83,"file":"canvas.js","path":"src"}},{"name":"changeCanvasHeigth","description":"Change the current canvas' height.","params":[{"name":"height","description":"The new height for the canvas.","type":[[["number"]]]}],"returns":[[["CanvasConstructor"]]],"meta":{"line":93,"file":"canvas.js","path":"src"}},{"name":"save","description":"Save the entire state of the canvas by pushing the current state onto a stack.","see":["https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/save"],"returns":[[["CanvasConstructor"]]],"meta":{"line":103,"file":"canvas.js","path":"src"}},{"name":"restore","description":"Restores the most recently saved canvas by popping the top entry in the drawing state stack. If there is no saved state, this method does nothing.","see":["https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/restore"],"returns":[[["CanvasConstructor"]]],"meta":{"line":114,"file":"canvas.js","path":"src"}},{"name":"rotate","description":"Adds a rotation to the transformation matrix. The angle argument represents a clockwise rotation angle and is expressed in radians.","see":["https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/rotate"],"params":[{"name":"angle","description":"The angle to rotate clockwise in radians.","type":[[["number"]]]}],"returns":[[["CanvasConstructor"]]],"meta":{"line":126,"file":"canvas.js","path":"src"}},{"name":"scale","description":"Adds a scaling transformation to the canvas units by x horizontally and by y vertically.","see":["https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/scale"],"params":[{"name":"x","description":"Scaling factor in the horizontal direction.","type":[[["number"]]]},{"name":"y","description":"Scaling factor in the vertical direction.","type":[[["number"]]]}],"returns":[[["CanvasConstructor"]]],"meta":{"line":139,"file":"canvas.js","path":"src"}},{"name":"translate","description":"Adds a translation transformation by moving the canvas and its origin x horizontally and y vertically on the grid.","see":["https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/translate"],"params":[{"name":"x","description":"Distance to move in the horizontal direction.","type":[[["number"]]]},{"name":"y","description":"Distance to move in the vertical direction.","type":[[["number"]]]}],"returns":[[["CanvasConstructor"]]],"meta":{"line":152,"file":"canvas.js","path":"src"}},{"name":"clip","description":"Turns the path currently being built into the current clipping path.","see":["https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/clip"],"params":[{"name":"path","description":"A Path2D path to fill.","type":[[["any"]]]},{"name":"fillRule","description":"The algorithm by which to determine if a point is inside a path or\noutside a path.","type":[[["nonzero","'"]],[["evenodd","'"]]]}],"returns":[[["CanvasConstructor"]]],"meta":{"line":166,"file":"canvas.js","path":"src"}},{"name":"setTransform","description":"Resets (overrides) the current transformation to the identity matrix and then invokes a transformation described\nby the arguments of this method.","see":["https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setTransform"],"params":[{"name":"a","description":"Horizontal scaling.","type":[[["number"]]]},{"name":"b","description":"Horizontal skewing.","type":[[["number"]]]},{"name":"c","description":"Vertical skewing.","type":[[["number"]]]},{"name":"d","description":"Vertical scaling.","type":[[["number"]]]},{"name":"e","description":"Horizontal moving.","type":[[["number"]]]},{"name":"f","description":"Vertical moving.","type":[[["number"]]]}],"returns":[[["CanvasConstructor"]]],"meta":{"line":184,"file":"canvas.js","path":"src"}},{"name":"resetTransformation","description":"Reset the transformation.","returns":[[["CanvasConstructor"]]],"meta":{"line":194,"file":"canvas.js","path":"src"}},{"name":"getImageData","description":"Returns an ImageData object representing the underlying pixel data for the area of the canvas denoted by the rectangle which starts at (sx, sy)\nand has an sw width and sh height. This method is not affected by the canvas transformation matrix.","see":["https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/getImageData"],"params":[{"name":"x","description":"The x coordinate of the upper left corner of the rectangle from which the ImageData will be extracted.","optional":true,"default":0,"type":[[["number"]],[["function"]]]},{"name":"y","description":"The y coordinate of the upper left corner of the rectangle from which the ImageData will be extracted.","optional":true,"default":0,"type":[[["number"]]]},{"name":"width","description":"The width of the rectangle from which the ImageData will be extracted.","optional":true,"type":[[["number"]]]},{"name":"height","description":"The height of the rectangle from which the ImageData will be extracted.","optional":true,"type":[[["number"]]]},{"name":"callback","description":"The callback, if not specified, this method won't be chainable as it will return a\nnumber. If you use an arrow function, you might want to use the second argument which is the instance of the\nclass. Otherwise, the keyword this is binded to the class instance itself, so you can use it safely.","type":[[["function"]]]}],"returns":[[["CanvasConstructor"]]],"meta":{"line":212,"file":"canvas.js","path":"src"}},{"name":"putImageData","description":"The CanvasRenderingContext2D.putImageData() method of the Canvas 2D API paints data from the given ImageData object onto the bitmap.\nIf a dirty rectangle is provided, only the pixels from that rectangle are painted.\nThis method is not affected by the canvas transformation matrix.","see":["https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/putImageData"],"params":[{"name":"imagedata","description":"An ImageData object containing the array of pixel values.","type":[[["ImageData"]]]},{"name":"dx","description":"Horizontal position (x-coordinate) at which to place the image data in the destination canvas.","type":[[["number"]]]},{"name":"dy","description":"Vertical position (y-coordinate) at which to place the image data in the destination canvas.","type":[[["number"]]]},{"name":"dirtyX","description":"Horizontal position (x-coordinate). The x coordinate of the top left hand corner of your Image data. Defaults to 0.","optional":true,"default":0,"type":[[["number"]]]},{"name":"dirtyY","description":"Vertical position (y-coordinate). The y coordinate of the top left hand corner of your Image data. Defaults to 0.","optional":true,"default":0,"type":[[["number"]]]},{"name":"dirtyWidth","description":"Width of the rectangle to be painted. Defaults to the width of the image data.","optional":true,"type":[[["number"]]]},{"name":"dirtyHeight","description":"Height of the rectangle to be painted. Defaults to the height of the image data.","optional":true,"type":[[["number"]]]}],"returns":[[["CanvasConstructor"]]],"meta":{"line":240,"file":"canvas.js","path":"src"}},{"name":"fill","description":"Fills the current or given path with the current fill style using the non-zero or even-odd winding rule.","see":["https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/fill"],"params":[{"name":"path","description":"A Path2D path to fill.","type":[[["any"]]]},{"name":"fillRule","description":"The algorithm by which to determine if a point is inside a path or\noutside a path.","type":[[["nonzero","'"]],[["evenodd","'"]]]}],"returns":[[["CanvasConstructor"]]],"meta":{"line":254,"file":"canvas.js","path":"src"}},{"name":"addText","description":"Add a text.","see":["https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/fillText"],"params":[{"name":"text","description":"The text to write.","type":[[["string"]]]},{"name":"x","description":"The position x to start drawing the element.","type":[[["number"]]]},{"name":"y","description":"The position y to start drawing the element.","type":[[["number"]]]},{"name":"maxWidth","description":"The maximum width to draw. If specified, and the string is computed to be wider than\nthis width, the font is adjusted to use a more horizontally condensed font.","type":[[["number"]]]}],"returns":[[["CanvasConstructor"]]],"meta":{"line":270,"file":"canvas.js","path":"src"}},{"name":"addResponsiveText","description":"Add responsive text","examples":["new Canvas(400, 300)\n    .setTextFont('40px Tahoma')\n    .addResponsiveText('Hello World', 30, 30, 50)\n    .toBuffer();"],"params":[{"name":"text","description":"The text to write.","type":[[["string"]]]},{"name":"x","description":"The position x to start drawing the element.","type":[[["number"]]]},{"name":"y","description":"The position y to start drawing the element.","type":[[["number"]]]},{"name":"maxWidth","description":"The max length in pixels for the text.","type":[[["number"]]]}],"returns":[[["CanvasConstructor"]]],"meta":{"line":289,"file":"canvas.js","path":"src"}},{"name":"addMultilineText","description":"Add responsive text","examples":["new Canvas(400, 300)\n    .setTextFont('25px Tahoma')\n    .addMultilineText('This is a really long text!', 139, 360, 156, 28)\n    .toBuffer();"],"params":[{"name":"text","description":"The text to write.","type":[[["string"]]]},{"name":"x","description":"The position x to start drawing the element.","type":[[["number"]]]},{"name":"y","description":"The position y to start drawing the element.","type":[[["number"]]]},{"name":"maxWidth","description":"The max length in pixels for the text.","type":[[["number"]]]},{"name":"lineHeight","description":"The line's height.","type":[[["number"]]]}],"returns":[[["CanvasConstructor"]]],"meta":{"line":314,"file":"canvas.js","path":"src"}},{"name":"stroke","description":"Strokes the current or given path with the current stroke style using the non-zero winding rule.","see":["https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/stroke"],"params":[{"name":"path","description":"A Path2D path to stroke.","type":[[["any"]]]}],"returns":[[["CanvasConstructor"]]],"meta":{"line":340,"file":"canvas.js","path":"src"}},{"name":"addStrokeRect","description":"Paints a rectangle which has a starting point at (x, y) and has a w width and an h height onto the canvas, using\nthe current stroke style.","see":["https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/strokeRect"],"params":[{"name":"x","description":"The x axis of the coordinate for the rectangle starting point.","type":[[["number"]]]},{"name":"y","description":"The y axis of the coordinate for the rectangle starting point.","type":[[["number"]]]},{"name":"width","description":"The rectangle's width.","type":[[["number"]]]},{"name":"height","description":"The rectangle's height.","type":[[["number"]]]}],"returns":[[["CanvasConstructor"]]],"meta":{"line":356,"file":"canvas.js","path":"src"}},{"name":"addStrokeText","description":"Add stroked text.","see":["https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/strokeText"],"params":[{"name":"text","description":"The text to write.","type":[[["string"]]]},{"name":"x","description":"The position x to start drawing the element.","type":[[["number"]]]},{"name":"y","description":"The position y to start drawing the element.","type":[[["number"]]]}],"returns":[[["CanvasConstructor"]]],"meta":{"line":370,"file":"canvas.js","path":"src"}},{"name":"measureText","description":"Measure a text's width given a string.\nIf a callback is not passed, this method will not be chainable, and it will return an integer instead.","see":["https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/measureText"],"examples":["new Canvas(500, 400)\n    .setTextFont('40px Tahoma')\n    .measureText('Hello World!', function(size) {\n        const newSize = size.width < 500 ? 40 : (500 / size.width) * 40;\n        this.setTextFont(`${newSize}px Tahoma`);\n    })\n    .addText('Hello World!', 30, 50)\n    .toBuffer(); // Returns a Buffer","new Canvas(500, 400)\n    .setTextFont('40px Tahoma')\n    .measureText('Hello World!', (size, inst) => {\n        const newSize = size.width < 500 ? 40 : (500 / size.width) * 40;\n        inst.setTextFont(`${newSize}px`);\n    })\n    .addText('Hello World!', 30, 50)\n    .toBuffer(); // Returns a Buffer","const size = new Canvas(500, 400)\n    .setTextFont('40px Tahoma')\n    .measureText('Hello World!'); // Returns a number\n\nconst newSize = size.width < 500 ? 40 : (500 / size.width) * 40;\n\nnew Canvas(500, 400)\n    .setTextFont(`${newSize}px Tahoma`)\n    .addText('Hello World!', 30, 50)\n    .toBuffer(); // Returns a Buffer"],"params":[{"name":"text","description":"The text to measure.","type":[[["string"]]]},{"name":"callback","description":"The callback, if not specified, this method won't be chainable as it will return a\nnumber. If you use an arrow function, you might want to use the second argument which is the instance of the\nclass. Otherwise, the keyword this is binded to the class instance itself, so you can use it safely.","type":[[["function"]]]}],"returns":[[["CanvasConstructor"]],[["number"]]],"meta":{"line":415,"file":"canvas.js","path":"src"}},{"name":"setStroke","description":"Specifies the color or style to use for the lines around shapes. The default is #000000 (black).","see":["https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/strokeStyle"],"params":[{"name":"color","description":"A canvas' color resolvable.","optional":true,"default":"'#000000'","type":[[["string"]]]}],"returns":[[["CanvasConstructor"]]],"meta":{"line":431,"file":"canvas.js","path":"src"}},{"name":"setLineWidth","description":"Sets the thickness of lines in space units.","see":["https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/lineWidth"],"params":[{"name":"width","description":"A number specifying the line width in space units.","optional":true,"default":1,"type":[[["number"]]]}],"returns":[[["CanvasConstructor"]]],"meta":{"line":443,"file":"canvas.js","path":"src"}},{"name":"setLineDashOffset","description":"Sets the line dash pattern offset or \"phase\" to achieve a \"marching ants\" effect","see":["https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/lineDashOffset"],"params":[{"name":"value","description":"A float specifying the amount of the offset. Initially 0.0.","type":[[["number"]]]}],"returns":[[["CanvasConstructor"]]],"meta":{"line":459,"file":"canvas.js","path":"src"}},{"name":"setLineJoin","description":"Determines how two connecting segments (of lines, arcs or curves) with non-zero lengths in a shape are joined\ntogether (degenerate segments with zero lengths, whose specified endpoints and control points are exactly at the\nsame position, are skipped).","see":["https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/lineJoin"],"params":[{"name":"value","description":"The line join type.","type":[[["bevel","'"]],[["round","'"]],[["miter","'"]]]}],"returns":[[["CanvasConstructor"]]],"meta":{"line":473,"file":"canvas.js","path":"src"}},{"name":"setLineCap","description":"Determines how the end points of every line are drawn. There are three possible values for this property and\nthose are: butt, round and square. By default this property is set to butt.","see":["https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/lineCap"],"params":[{"name":"value","description":"The line join type.","type":[[["butt","'"]],[["round","'"]],[["square","'"]]]}],"returns":[[["CanvasConstructor"]]],"meta":{"line":486,"file":"canvas.js","path":"src"}},{"name":"setLineDash","description":"Sets the line dash pattern used when stroking lines, using an array of values which specify alternating lengths\nof lines and gaps which describe the pattern.","see":["https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash"],"params":[{"name":"segments","description":"An Array of numbers which specify distances to alternately draw a line and a gap (in\ncoordinate space units). If the number of elements in the array is odd, the elements of the array get copied and\nconcatenated. For example, [5, 15, 25] will become [5, 15, 25, 5, 15, 25]. If the array is empty, the line dash\nlist is cleared and line strokes return to being solid.","type":[[["Array","<"],["number",">"]]]}],"returns":[[["CanvasConstructor"]]],"meta":{"line":502,"file":"canvas.js","path":"src"}},{"name":"addImage","description":"Add an image.","params":[{"name":"buffer","description":"The image's buffer.","type":[[["Buffer"]]]},{"name":"x","description":"The position x to start drawing the element.","type":[[["number"]]]},{"name":"y","description":"The position y to start drawing the element.","type":[[["number"]]]},{"name":"width","description":"The width of the element.","type":[[["number"]]]},{"name":"height","description":"The heigth of the element.","type":[[["number"]]]},{"name":"options","description":"Options.","type":[[["Object"]]]},{"name":"options.radius","description":"The radius for the new image.","type":[[["number"]]]},{"name":"options.type","description":"The type for the new image.","type":[[["round","'"]],[["bevel","'"]]]},{"name":"options.restore","description":"Whether this method should restore the drawing state. Use this when you use options.type","type":[[["boolean"]]]}],"returns":[[["CanvasConstructor"]]],"meta":{"line":521,"file":"canvas.js","path":"src"}},{"name":"addRoundImage","description":"Add a round image.","params":[{"name":"buffer","description":"The image's buffer.","type":[[["Buffer"]]]},{"name":"x","description":"The position x to start drawing the element.","type":[[["number"]]]},{"name":"y","description":"The position y to start drawing the element.","type":[[["number"]]]},{"name":"width","description":"The width of the element.","type":[[["number"]]]},{"name":"height","description":"The heigth of the element.","type":[[["number"]]]},{"name":"radius","description":"The radius for the new image.","default":10,"type":[[["number"]]]}],"returns":[[["CanvasConstructor"]]],"meta":{"line":546,"file":"canvas.js","path":"src"}},{"name":"addBevelImage","description":"Add a beveled image.","params":[{"name":"buffer","description":"The image's buffer.","type":[[["Buffer"]]]},{"name":"x","description":"The position x to start drawing the element.","type":[[["number"]]]},{"name":"y","description":"The position y to start drawing the element.","type":[[["number"]]]},{"name":"width","description":"The width of the element.","type":[[["number"]]]},{"name":"height","description":"The heigth of the element.","type":[[["number"]]]},{"name":"radius","description":"The radius for the new image.","default":10,"type":[[["number"]]]}],"returns":[[["CanvasConstructor"]]],"meta":{"line":561,"file":"canvas.js","path":"src"}},{"name":"addCircle","description":"Add a circle or semi circle.","params":[{"name":"x","description":"The position x in the center of the circle.","type":[[["number"]]]},{"name":"y","description":"The position y in the center of the ircle.","type":[[["number"]]]},{"name":"radius","description":"The radius for the clip.","type":[[["number"]]]}],"returns":[[["CanvasConstructor"]]],"meta":{"line":573,"file":"canvas.js","path":"src"}},{"name":"createRoundPath","description":"Create a round path.","params":[{"name":"x","description":"The position x in the center of the clip's circle.","type":[[["number"]]]},{"name":"y","description":"The position y in the center of the clip's circle.","type":[[["number"]]]},{"name":"radius","description":"The radius for the clip.","type":[[["number"]]]},{"name":"start","description":"The degree in radians to start drawing the circle.","optional":true,"default":0,"type":[[["number"]]]},{"name":"angle","description":"The degree in radians to finish drawing the circle, defaults to a full circle.","optional":true,"default":"Math.PI * 2","type":[[["number"]]]}],"returns":[[["CanvasConstructor"]]],"meta":{"line":587,"file":"canvas.js","path":"src"}},{"name":"createRoundClip","description":"Create a round clip.","params":[{"name":"x","description":"The position x in the center of the clip's circle.","type":[[["number"]]]},{"name":"y","description":"The position y in the center of the clip's circle.","type":[[["number"]]]},{"name":"radius","description":"The radius for the clip.","type":[[["number"]]]},{"name":"start","description":"The degree in radians to start drawing the circle.","optional":true,"default":0,"type":[[["number"]]]},{"name":"angle","description":"The degree in radians to finish drawing the circle, defaults to a full circle.","optional":true,"default":"Math.PI * 2","type":[[["number"]]]}],"returns":[[["CanvasConstructor"]]],"meta":{"line":604,"file":"canvas.js","path":"src"}},{"name":"createRectPath","description":"Create a rectangle path.","params":[{"name":"x","description":"The position x in the left corner.","type":[[["number"]]]},{"name":"y","description":"The position y in the upper corner.","type":[[["number"]]]},{"name":"width","description":"The width of the rectangle.","type":[[["number"]]]},{"name":"height","description":"The height of the rectangle.","type":[[["number"]]]}],"returns":[[["CanvasConstructor"]]],"meta":{"line":617,"file":"canvas.js","path":"src"}},{"name":"createRectClip","description":"Create a rectangle clip.","params":[{"name":"x","description":"The position x in the left corner.","type":[[["number"]]]},{"name":"y","description":"The position y in the upper corner.","type":[[["number"]]]},{"name":"width","description":"The width of the rectangle.","type":[[["number"]]]},{"name":"height","description":"The height of the rectangle.","type":[[["number"]]]}],"returns":[[["CanvasConstructor"]]],"meta":{"line":631,"file":"canvas.js","path":"src"}},{"name":"createBeveledPath","description":"Create a round path.","params":[{"name":"x","description":"The position x to start drawing clip.","type":[[["number"]]]},{"name":"y","description":"The position y to start drawing clip.","type":[[["number"]]]},{"name":"width","description":"The width of clip.","type":[[["number"]]]},{"name":"height","description":"The heigth of clip.","type":[[["number"]]]},{"name":"radius","description":"The radius for clip's rounded borders.","type":[[["number"]]]}],"returns":[[["CanvasConstructor"]]],"meta":{"line":645,"file":"canvas.js","path":"src"}},{"name":"createBeveledClip","description":"Create a round clip.","params":[{"name":"x","description":"The position x to start drawing clip.","type":[[["number"]]]},{"name":"y","description":"The position y to start drawing clip.","type":[[["number"]]]},{"name":"width","description":"The width of clip.","type":[[["number"]]]},{"name":"height","description":"The heigth of clip.","type":[[["number"]]]},{"name":"radius","description":"The radius for clip's rounded borders.","type":[[["number"]]]}],"returns":[[["CanvasConstructor"]]],"meta":{"line":674,"file":"canvas.js","path":"src"}},{"name":"addRect","description":"Add a rectangle.","see":["https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/fillRect"],"params":[{"name":"x","description":"The position x to start drawing the element.","type":[[["number"]]]},{"name":"y","description":"The position y to start drawing the element.","type":[[["number"]]]},{"name":"width","description":"The width of the element.","type":[[["number"]]]},{"name":"height","description":"The heigth of the element.","type":[[["number"]]]}],"returns":[[["CanvasConstructor"]]],"meta":{"line":688,"file":"canvas.js","path":"src"}},{"name":"setColor","description":"Set a color for the canvas' context.","see":["https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/fillStyle"],"params":[{"name":"color","description":"A canvas' color resolvable.","type":[[["string"]],[["CanvasGradient"]]]}],"returns":[[["CanvasConstructor"]]],"meta":{"line":700,"file":"canvas.js","path":"src"}},{"name":"setTextFont","description":"Change the font.","see":["https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font"],"params":[{"name":"font","description":"The font's name to set.","type":[[["string"]]]}],"returns":[[["CanvasConstructor"]]],"meta":{"line":712,"file":"canvas.js","path":"src"}},{"name":"setTextAlign","description":"Change the font alignment.","see":["https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/textAlign"],"params":[{"name":"align","description":"The font's alignment to set.","type":[[["left","'"]],[["center","'"]],[["right","'"]],[["start","'"]],[["end","'"]]]}],"returns":[[["CanvasConstructor"]]],"meta":{"line":724,"file":"canvas.js","path":"src"}},{"name":"setTextBaseline","description":"Change the font's baseline.","see":["https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/textBaseline"],"params":[{"name":"baseline","description":"The font's baseline to set.","type":[[["top","'"]],[["hanging","'"]],[["middle","'"]],[["alphabetic","'"]],[["ideographic","'"]],[["bottom","'"]]]}],"returns":[[["CanvasConstructor"]]],"meta":{"line":736,"file":"canvas.js","path":"src"}},{"name":"beginPath","description":"Starts a new path by emptying the list of sub-paths.","see":["https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/beginPath"],"returns":[[["CanvasConstructor"]]],"meta":{"line":747,"file":"canvas.js","path":"src"}},{"name":"closePath","description":"Causes the point of the pen to move back to the start of the current sub-path.\nIf the shape has already been closed or has only one point, this function does nothing.","see":["https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/closePath"],"returns":[[["CanvasConstructor"]]],"meta":{"line":759,"file":"canvas.js","path":"src"}},{"name":"createPattern","description":"Creates a pattern using the specified image. It repeats the source in the directions specified by the repetition\nargument.","see":["https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/createPattern"],"params":[{"name":"image","description":"A Canvas Image to be used as the image to repeat.","type":[[["Image"]]]},{"name":"repetition","description":"The repeat mode.","type":[[["repeat","'"]],[["repeat","-"],["x","'"]],[["repeat","-"],["y","'"]],[["no","-"],["repeat","'"]]]}],"returns":[[["CanvasConstructor"]]],"meta":{"line":773,"file":"canvas.js","path":"src"}},{"name":"createLinearGradient","description":"Creates a gradient along the line given by the coordinates represented by the parameters.\nThe coordinates are global, the second point does not rely on the position of the first and vice versa.","see":["https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/createLinearGradient"],"params":[{"name":"x0","description":"The x axis of the coordinate of the start point.","type":[[["number"]]]},{"name":"y0","description":"The y axis of the coordinate of the start point.","type":[[["number"]]]},{"name":"x1","description":"The x axis of the coordinate of the end point.","type":[[["number"]]]},{"name":"y1","description":"The y axis of the coordinate of the end point.","type":[[["number"]]]},{"name":"steps","description":"The steps.","optional":true,"default":"[]","type":[[["Array","<"],["GradientStep",">"]]]}],"returns":[[["CanvasGradient"]]],"meta":{"line":789,"file":"canvas.js","path":"src"}},{"name":"printLinearGradient","description":"Creates a gradient along the line given by the coordinates represented by the parameters.\nThe coordinates are global, the second point does not rely on the position of the first and vice versa. This\nmethod is chainable and calls setColor after creating the gradient.","see":["https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/createLinearGradient"],"params":[{"name":"x0","description":"The x axis of the coordinate of the start point.","type":[[["number"]]]},{"name":"y0","description":"The y axis of the coordinate of the start point.","type":[[["number"]]]},{"name":"x1","description":"The x axis of the coordinate of the end point.","type":[[["number"]]]},{"name":"y1","description":"The y axis of the coordinate of the end point.","type":[[["number"]]]},{"name":"steps","description":"The steps.","type":[[["Array","<"],["GradientStep",">"]]]}],"returns":[[["CanvasConstructor"]]],"meta":{"line":810,"file":"canvas.js","path":"src"}},{"name":"createRadialGradient","description":"Creates a radial gradient given by the coordinates of the two circles represented by the parameters.","see":["https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/createRadialGradient"],"params":[{"name":"x0","description":"The x axis of the coordinate of the start circle.","type":[[["number"]]]},{"name":"y0","description":"The y axis of the coordinate of the start circle.","type":[[["number"]]]},{"name":"r0","description":"The radius of the start circle.","type":[[["number"]]]},{"name":"x1","description":"The x axis of the coordinate of the end circle.","type":[[["number"]]]},{"name":"y1","description":"The y axis of the coordinate of the end circle.","type":[[["number"]]]},{"name":"r1","description":"The radius of the end circle.","type":[[["number"]]]},{"name":"steps","description":"The steps.","optional":true,"default":"[]","type":[[["Array","<"],["GradientStep",">"]]]}],"returns":[[["CanvasGradient"]]],"meta":{"line":827,"file":"canvas.js","path":"src"}},{"name":"printRadialGradient","description":"Creates a radial gradient given by the coordinates of the two circles represented by the parameters. This\nmethod is chainable and calls setColor after creating the gradient.","see":["https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/createRadialGradient"],"params":[{"name":"x0","description":"The x axis of the coordinate of the start circle.","type":[[["number"]]]},{"name":"y0","description":"The y axis of the coordinate of the start circle.","type":[[["number"]]]},{"name":"r0","description":"The radius of the start circle.","type":[[["number"]]]},{"name":"x1","description":"The x axis of the coordinate of the end circle.","type":[[["number"]]]},{"name":"y1","description":"The y axis of the coordinate of the end circle.","type":[[["number"]]]},{"name":"r1","description":"The radius of the end circle.","type":[[["number"]]]},{"name":"steps","description":"The steps.","type":[[["Array","<"],["GradientStep",">"]]]}],"returns":[[["CanvasConstructor"]]],"meta":{"line":849,"file":"canvas.js","path":"src"}},{"name":"createEllipse","description":"Adds an ellipse to the path which is centered at (x, y) position with the radii radiusX and radiusY starting at\nstartAngle and ending at endAngle going in the given direction by anticlockwise (defaulting to clockwise).","see":["https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/ellipse"],"params":[{"name":"x","description":"The x axis of the coordinate for the ellipse's center.","type":[[["number"]]]},{"name":"y","description":"The y axis of the coordinate for the ellipse's center.","type":[[["number"]]]},{"name":"radiusX","description":"The ellipse's major-axis radius.","type":[[["number"]]]},{"name":"radiusY","description":"The ellipse's minor-axis radius.","type":[[["number"]]]},{"name":"rotation","description":"The rotation for this ellipse, expressed in radians.","type":[[["number"]]]},{"name":"startAngle","description":"The starting point, measured from the x axis, from which it will be drawn, expressed\nin radians.","type":[[["number"]]]},{"name":"endAngle","description":"The end ellipse's angle to which it will be drawn, expressed in radians.","type":[[["number"]]]},{"name":"anticlockwise","description":"An optional Boolean which, if true, draws the ellipse anticlockwise\n(counter-clockwise), otherwise in a clockwise direction.","optional":true,"default":false,"type":[[["boolean"]]]}],"returns":[[["CanvasConstructor"]]],"meta":{"line":871,"file":"canvas.js","path":"src"}},{"name":"arc","description":"Adds an arc to the path which is centered at (x, y) position with radius r starting at startAngle and ending at\nendAngle going in the given direction by anticlockwise (defaulting to clockwise).","see":["https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/arc"],"params":[{"name":"x","description":"The x coordinate of the arc's center.","type":[[["number"]]]},{"name":"y","description":"The y coordinate of the arc's center.","type":[[["number"]]]},{"name":"radius","description":"The arc's radius.","type":[[["number"]]]},{"name":"startAngle","description":"The angle at which the arc starts, measured clockwise from the positive x axis and\nexpressed in radians.","type":[[["number"]]]},{"name":"endAngle","description":"The angle at which the arc ends, measured clockwise from the positive x axis and\nexpressed in radians.","type":[[["number"]]]},{"name":"anticlockwise","description":"An optional Boolean which, if true, causes the arc to be drawn\ncounter-clockwise between the two angles. By default it is drawn clockwise.","optional":true,"default":false,"type":[[["boolean"]]]}],"returns":[[["CanvasConstructor"]]],"meta":{"line":892,"file":"canvas.js","path":"src"}},{"name":"arcTo","description":"Adds an arc to the path with the given control points and radius, connected to the previous point by a straight line.","see":["https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/arcTo"],"params":[{"name":"x1","description":"The x axis of the coordinate for the first control point.","type":[[["number"]]]},{"name":"y1","description":"The y axis of the coordinate for the first control point.","type":[[["number"]]]},{"name":"x2","description":"The x axis of the coordinate for the second control point.","type":[[["number"]]]},{"name":"y2","description":"The y axis of the coordinate for the second control point.","type":[[["number"]]]},{"name":"radius","description":"The arc's radius.","type":[[["number"]]]}],"returns":[[["CanvasConstructor"]]],"meta":{"line":908,"file":"canvas.js","path":"src"}},{"name":"quadraticCurveTo","description":"Adds a quadratic Bézier curve to the path. It requires two points. The first point is a control point and the\nsecond one is the end point. The starting point is the last point in the current path, which can be changed using\nmoveTo() before creating the quadratic Bézier curve.","see":["https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/quadraticCurveTo"],"params":[{"name":"cpx","description":"The x axis of the coordinate for the control point.","type":[[["number"]]]},{"name":"cpy","description":"The y axis of the coordinate for the control point.","type":[[["number"]]]},{"name":"x","description":"The x axis of the coordinate for the end point.","type":[[["number"]]]},{"name":"y","description":"The y axis of the coordinate for the end point.","type":[[["number"]]]}],"returns":[[["CanvasConstructor"]]],"meta":{"line":925,"file":"canvas.js","path":"src"}},{"name":"bezierCurveTo","description":"Adds a cubic Bézier curve to the path. It requires three points. The first two points are control points and the\nthird one is the end point. The starting point is the last point in the current path, which can be changed using\nmoveTo() before creating the Bézier curve.","see":["https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/bezierCurveTo"],"params":[{"name":"cp1x","description":"The x axis of the coordinate for the first control point.","type":[[["number"]]]},{"name":"cp1y","description":"The y axis of the coordinate for first control point.","type":[[["number"]]]},{"name":"cp2x","description":"The x axis of the coordinate for the second control point.","type":[[["number"]]]},{"name":"cp2y","description":"The y axis of the coordinate for the second control point.","type":[[["number"]]]},{"name":"x","description":"The x axis of the coordinate for the end point.","type":[[["number"]]]},{"name":"y","description":"The y axis of the coordinate for the end point.","type":[[["number"]]]}],"returns":[[["CanvasConstructor"]]],"meta":{"line":944,"file":"canvas.js","path":"src"}},{"name":"lineTo","description":"Connects the last point in the sub-path to the x, y coordinates with a straight line","see":["https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/lineTo"],"params":[{"name":"x","description":"The x axis of the coordinate for the end of the line.","type":[[["number"]]]},{"name":"y","description":"The y axis of the coordinate for the end of the line.","type":[[["number"]]]}],"returns":[[["CanvasConstructor"]]],"meta":{"line":957,"file":"canvas.js","path":"src"}},{"name":"moveTo","description":"Moves the starting point of a new sub-path to the (x, y) coordinates.","see":["https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/moveTo"],"params":[{"name":"x","description":"The x axis of the point.","type":[[["number"]]]},{"name":"y","description":"The y axis of the point.","type":[[["number"]]]}],"returns":[[["CanvasConstructor"]]],"meta":{"line":970,"file":"canvas.js","path":"src"}},{"name":"setShadowBlur","description":"Set the shadow's blur.","see":["https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/shadowBlur"],"params":[{"name":"radius","description":"The shadow's blur radius to set.","type":[[["number"]]]}],"returns":[[["CanvasConstructor"]]],"meta":{"line":982,"file":"canvas.js","path":"src"}},{"name":"setShadowColor","description":"Set the shadow's color.","see":["https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/shadowColor"],"params":[{"name":"color","description":"A canvas' color resolvable to set as shadow's color.","type":[[["string"]]]}],"returns":[[["CanvasConstructor"]]],"meta":{"line":994,"file":"canvas.js","path":"src"}},{"name":"setShadowOffsetX","description":"Set the property that specifies the distance that the shadow will be offset in horizontal distance.","see":["https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/shadowOffsetX"],"params":[{"name":"value","description":"The value in pixels for the distance.","type":[[["number"]]]}],"returns":[[["CanvasConstructor"]]],"meta":{"line":1006,"file":"canvas.js","path":"src"}},{"name":"setShadowOffsetY","description":"Set the property that specifies the distance that the shadow will be offset in vertical distance.","see":["https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/shadowOffsetY"],"params":[{"name":"value","description":"The value in pixels for the distance.","type":[[["number"]]]}],"returns":[[["CanvasConstructor"]]],"meta":{"line":1018,"file":"canvas.js","path":"src"}},{"name":"setMiterLimit","description":"Sets the miter limit ratio in space units. When getting, it returns the current value (10.0 by default). When\nsetting, zero, negative, Infinity and NaN values are ignored; otherwise the current value is set to the new value.","see":["https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/miterLimit"],"params":[{"name":"value","description":"A number specifying the miter limit ratio in space units. Zero, negative, Infinity and NaN\nvalues are ignored.","type":[[["number"]]]}],"returns":[[["CanvasConstructor"]]],"meta":{"line":1032,"file":"canvas.js","path":"src"}},{"name":"setPatternQuality","description":"Change the pattern quality","params":[{"name":"pattern","description":"The pattern quality.","type":[[["fast","'"]],[["good","'"]],[["best","'"]],[["nearest","'"]],[["bilinear","'"]]]}],"returns":[[["CanvasConstructor"]]],"meta":{"line":1043,"file":"canvas.js","path":"src"}},{"name":"setTextDrawingMode","description":"Set the text drawing mode. Using glyph is much faster than path for drawing, and when using a PDF context will\nembed the text natively, so will be selectable and lower filesize. The downside is that cairo does not have any\nsubpixel precision for glyph, so this will be noticeably lower quality for text positioning in cases such as\nrotated text. Also, strokeText in glyph will act the same as fillText, except using the stroke style for the fill.","params":[{"name":"mode","description":"The drawing mode.","type":[[["path","'"]],[["glyph","'"]]]}],"returns":[[["CanvasConstructor"]]],"meta":{"line":1057,"file":"canvas.js","path":"src"}},{"name":"setAntialiasing","description":"Set anti-aliasing mode.","params":[{"name":"antialias","description":"The antialias mode.","type":[[["default","'"]],[["none","'"]],[["gray","'"]],[["subpixel","'"]]]}],"returns":[[["CanvasConstructor"]]],"meta":{"line":1068,"file":"canvas.js","path":"src"}},{"name":"setGlobalCompositeOperation","description":"Sets the type of compositing operation to apply when drawing new shapes, where type is a string identifying which\nof the compositing or blending mode operations to use.","see":["https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation"],"params":[{"name":"type","description":"The global composite operation mode.","type":[[["source","-"],["over","'"]],[["source","-"],["in","'"]],[["source","-"],["out","'"]],[["source","-"],["atop","'"]],[["destination","-"],["over","'"]],[["destination","-"],["in","'"]],[["destination","-"],["out","'"]],[["destination","-"],["atop","'"]],[["lighter","'"]],[["copy","'"]],[["xor","'"]],[["darken","'"]],[["lighten","'"]],[["color","-"],["dodge","'"]],[["color","-"],["burn","'"]],[["difference","'"]],[["exclusion","'"]],[["hue","'"]],[["saturation","'"]],[["color","'"]],[["luminosity","'"]],[["multiply","'"]],[["screen","'"]],[["overlay","'"]],[["hard","-"],["light","'"]],[["soft","-"],["light","'"]],[["hsl","-"],["hue","'"]],[["hsl","-"],["saturation","'"]],[["hsl","-"],["color","'"]],[["hsl","-"],["luminosity","'"]]]}],"returns":[[["CanvasConstructor"]]],"meta":{"line":1081,"file":"canvas.js","path":"src"}},{"name":"setGlobalAlpha","description":"Modify the alpha value that is applied to shapes and images before they are drawn into the canvas.","see":["https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalAlpha"],"params":[{"name":"value","description":"The alpha value, from 0.0 (fully transparent) to 1.0 (fully opaque)","type":[[["number"]]]}],"returns":[[["CanvasConstructor"]]],"meta":{"line":1093,"file":"canvas.js","path":"src"}},{"name":"resetShadows","description":"Reset the canvas' shadows.","returns":[[["CanvasConstructor"]]],"meta":{"line":1103,"file":"canvas.js","path":"src"}},{"name":"clearCircle","description":"Clear a circle.","params":[{"name":"x","description":"The position x in the center of the clip's circle.","type":[[["number"]]]},{"name":"y","description":"The position y in the center of the clip's circle.","type":[[["number"]]]},{"name":"radius","description":"The radius for the clip.","type":[[["number"]]]},{"name":"start","description":"The degree in radians to start drawing the circle.","optional":true,"default":0,"type":[[["number"]]]},{"name":"angle","description":"The degree in radians to finish drawing the circle, defaults to a full circle.","optional":true,"default":"Math.PI * 2","type":[[["number"]]]}],"returns":[[["CanvasConstructor"]]],"meta":{"line":1119,"file":"canvas.js","path":"src"}},{"name":"clearPixels","description":"Clear an area.","see":["https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/clearRect"],"params":[{"name":"x","description":"The position x to start drawing the element.","optional":true,"default":0,"type":[[["number"]]]},{"name":"y","description":"The position y to start drawing the element.","optional":true,"default":0,"type":[[["number"]]]},{"name":"width","description":"The width of the element.","optional":true,"default":"this.width","type":[[["number"]]]},{"name":"height","description":"The heigth of the element.","optional":true,"default":"this.heigth","type":[[["number"]]]}],"returns":[[["CanvasConstructor"]]],"meta":{"line":1135,"file":"canvas.js","path":"src"}},{"name":"getLineDash","see":["https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/getLineDash"],"examples":["new Canvas(400, 300)\n    .beginPath()\n    .setLineDash([5, 15])\n    .moveTo(0, 50)\n    .lineTo(400, 50)\n    .stroke()\n    .toBuffer();"],"returns":{"types":[[["Array","<"],["number",">"]]],"description":"An Array. A list of numbers that specifies distances to alternately draw a line and a gap (in\ncoordinate space units). If the number, when setting the elements, was odd, the elements of the array get copied\nand concatenated. For example, setting the line dash to [5, 15, 25] will result in getting back [5, 15, 25, 5, 15,\n25]."},"meta":{"line":1155,"file":"canvas.js","path":"src"}},{"name":"isPointInPath","description":"Reports whether or not the specified point is contained in the current path.","see":["https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/isPointInPath"],"params":[{"name":"x","description":"The X coordinate of the point to check.","type":[[["number"]]]},{"name":"y","description":"The Y coordinate of the point to check.","type":[[["number"]]]},{"name":"fillRule","description":"The algorithm by which to determine if a point is inside a path or\noutside a path.","type":[[["nonzero","'"]],[["evenodd","'"]]]}],"returns":[[["boolean"]]],"meta":{"line":1177,"file":"canvas.js","path":"src"}},{"name":"isPointInStroke","description":"Reports whether or not the specified point is inside the area contained by the stroking of a path.","see":["https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/isPointInStroke"],"params":[{"name":"x","description":"The X coordinate of the point to check.","type":[[["number"]]]},{"name":"y","description":"The Y coordinate of the point to check.","type":[[["number"]]]}],"returns":[[["boolean"]]],"meta":{"line":1188,"file":"canvas.js","path":"src"}},{"name":"toBuffer","description":"Render the canvas into a buffer.","params":[{"name":"options","description":"The render's options.","type":[[["Object"]]]}],"returns":[[["Buffer"]]],"meta":{"line":1197,"file":"canvas.js","path":"src"}},{"name":"toBufferAsync","description":"Render the canvas into a buffer using a Promise.","returns":[[["Promise","<"],["Buffer",">"]]],"meta":{"line":1205,"file":"canvas.js","path":"src"}},{"name":"addTextFont","description":"Register a new font (Canvas 1.6.x).","params":[{"name":"path","description":"The path for the font.","type":[[["string"]]]},{"name":"family","description":"The font's family name.","type":[[["string"]]]}],"returns":[[["CanvasConstructor"]]],"meta":{"line":1223,"file":"canvas.js","path":"src"}},{"name":"process","description":"Process data with this as the context","params":[{"name":"fn","description":"A callback function","type":[[["function"]]]}],"returns":[[["this"]]],"meta":{"line":1260,"file":"canvas.js","path":"src"}},{"name":"registerFont","description":"Register a new font (Canvas 2.x).","scope":"static","params":[{"name":"path","description":"The path for the font.","type":[[["string"]]]},{"name":"family","description":"The font's family name.","type":[[["string"]]]}],"returns":[[["CanvasConstructor"]]],"meta":{"line":1235,"file":"canvas.js","path":"src"}}],"meta":{"line":20,"file":"canvas.js","path":"src"}}],"typedefs":[{"name":"GradientStep","type":[[["object"]]],"props":[{"name":"position","description":"Position of the step.","type":[[["number"]]]},{"name":"color","description":"A colour resolvable.","type":[[["string"]]]}],"meta":{"line":1244,"file":"canvas.js","path":"src"}},{"name":"CanvasGradient","type":[[["object"]]],"props":[{"name":"addColorStop","description":"Position of the step.","type":[[["function"]]]}],"meta":{"line":1250,"file":"canvas.js","path":"src"}}],"externals":[]}
